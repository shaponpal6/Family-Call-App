{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React\\\\Family-Call-App\\\\src\\\\components\\\\Video\\\\VideoPlayer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Video from 'react-native-video';\n\nvar VideoPlayer = function (_Component) {\n  _inherits(VideoPlayer, _Component);\n\n  var _super = _createSuper(VideoPlayer);\n\n  function VideoPlayer(props) {\n    var _this;\n\n    _classCallCheck(this, VideoPlayer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rate: 1,\n      volume: 1,\n      muted: false,\n      resizeMode: 'contain',\n      duration: 0.0,\n      currentTime: 0.0\n    };\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_this));\n    _this.onProgress = _this.onProgress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(VideoPlayer, [{\n    key: \"onLoad\",\n    value: function onLoad(data) {\n      this.setState({\n        duration: data.duration\n      });\n    }\n  }, {\n    key: \"onProgress\",\n    value: function onProgress(data) {\n      this.setState({\n        currentTime: data.currentTime\n      });\n    }\n  }, {\n    key: \"getCurrentTimePercentage\",\n    value: function getCurrentTimePercentage() {\n      if (this.state.currentTime > 0) {\n        return parseFloat(this.state.currentTime) / parseFloat(this.state.duration);\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"renderRateControl\",\n    value: function renderRateControl(rate) {\n      var _this2 = this;\n\n      var isSelected = this.state.rate == rate;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            rate: rate\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.controlOption, {\n          fontWeight: isSelected ? \"bold\" : \"normal\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, rate, \"x\"));\n    }\n  }, {\n    key: \"renderResizeModeControl\",\n    value: function renderResizeModeControl(resizeMode) {\n      var _this3 = this;\n\n      var isSelected = this.state.resizeMode == resizeMode;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.setState({\n            resizeMode: resizeMode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.controlOption, {\n          fontWeight: isSelected ? \"bold\" : \"normal\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, resizeMode));\n    }\n  }, {\n    key: \"renderVolumeControl\",\n    value: function renderVolumeControl(volume) {\n      var _this4 = this;\n\n      var isSelected = this.state.volume == volume;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this4.setState({\n            volume: volume\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.controlOption, {\n          fontWeight: isSelected ? \"bold\" : \"normal\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, volume * 100, \"%\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var flexCompleted = this.getCurrentTimePercentage() * 100;\n      var flexRemaining = (1 - this.getCurrentTimePercentage()) * 100;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.fullScreen,\n        onPress: function onPress() {\n          _this5.setState({\n            paused: !_this5.state.paused\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, React.createElement(Video, {\n        source: require(\"../../../../test.mp4\"),\n        style: styles.fullScreen,\n        rate: this.state.rate,\n        paused: this.state.paused,\n        volume: this.state.volume,\n        muted: this.state.muted,\n        resizeMode: this.state.resizeMode,\n        onLoad: this.onLoad,\n        onProgress: this.onProgress,\n        onEnd: function onEnd() {\n          console.log('Done!');\n        },\n        repeat: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.controls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.generalControls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.rateControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, this.renderRateControl(0.25), this.renderRateControl(0.5), this.renderRateControl(1.0), this.renderRateControl(1.5), this.renderRateControl(2.0)), React.createElement(View, {\n        style: styles.volumeControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, this.renderVolumeControl(0.5), this.renderVolumeControl(1), this.renderVolumeControl(1.5)), React.createElement(View, {\n        style: styles.resizeModeControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, this.renderResizeModeControl('cover'), this.renderResizeModeControl('contain'), this.renderResizeModeControl('stretch'))), React.createElement(View, {\n        style: styles.trackingControls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.progress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.innerProgressCompleted, {\n          flex: flexCompleted\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [styles.innerProgressRemaining, {\n          flex: flexRemaining\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return VideoPlayer;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'black'\n  },\n  fullScreen: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  controls: {\n    backgroundColor: \"transparent\",\n    borderRadius: 5,\n    position: 'absolute',\n    bottom: 20,\n    left: 20,\n    right: 20\n  },\n  progress: {\n    flex: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden'\n  },\n  innerProgressCompleted: {\n    height: 20,\n    backgroundColor: '#cccccc'\n  },\n  innerProgressRemaining: {\n    height: 20,\n    backgroundColor: '#2C2C2C'\n  },\n  generalControls: {\n    flex: 1,\n    flexDirection: 'row',\n    borderRadius: 4,\n    overflow: 'hidden',\n    paddingBottom: 10\n  },\n  rateControl: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  volumeControl: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  resizeModeControl: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  controlOption: {\n    alignSelf: 'center',\n    fontSize: 11,\n    color: \"white\",\n    paddingLeft: 2,\n    paddingRight: 2,\n    lineHeight: 12\n  }\n});","map":{"version":3,"sources":["D:/React/Family-Call-App/src/components/Video/VideoPlayer.js"],"names":["React","Component","Video","VideoPlayer","props","state","rate","volume","muted","resizeMode","duration","currentTime","onLoad","bind","onProgress","data","setState","parseFloat","isSelected","styles","controlOption","fontWeight","flexCompleted","getCurrentTimePercentage","flexRemaining","container","fullScreen","paused","require","console","log","controls","generalControls","rateControl","renderRateControl","volumeControl","renderVolumeControl","resizeModeControl","renderResizeModeControl","trackingControls","progress","innerProgressCompleted","flex","innerProgressRemaining","StyleSheet","create","justifyContent","alignItems","backgroundColor","position","top","left","bottom","right","borderRadius","flexDirection","overflow","height","paddingBottom","alignSelf","fontSize","color","paddingLeft","paddingRight","lineHeight"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n  } from 'react';\r\n  \r\n  import {\r\n    AppRegistry,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n  } from 'react-native';\r\n  \r\n  import Video from 'react-native-video';\r\n  \r\n  class VideoPlayer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onLoad = this.onLoad.bind(this);\r\n      this.onProgress = this.onProgress.bind(this);\r\n    }\r\n  \r\n    state = {\r\n      rate: 1,\r\n      volume: 1,\r\n      muted: false,\r\n      resizeMode: 'contain',\r\n      duration: 0.0,\r\n      currentTime: 0.0,\r\n    };\r\n  \r\n    onLoad(data) {\r\n      this.setState({duration: data.duration});\r\n    }\r\n  \r\n    onProgress(data) {\r\n      this.setState({currentTime: data.currentTime});\r\n    }\r\n  \r\n    getCurrentTimePercentage() {\r\n      if (this.state.currentTime > 0) {\r\n        return parseFloat(this.state.currentTime) / parseFloat(this.state.duration);\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  \r\n    renderRateControl(rate) {\r\n      const isSelected = (this.state.rate == rate);\r\n  \r\n      return (\r\n        <TouchableOpacity onPress={() => { this.setState({rate: rate}) }}>\r\n          <Text style={[styles.controlOption, {fontWeight: isSelected ? \"bold\" : \"normal\"}]}>\r\n            {rate}x\r\n          </Text>\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n  \r\n    renderResizeModeControl(resizeMode) {\r\n      const isSelected = (this.state.resizeMode == resizeMode);\r\n  \r\n      return (\r\n        <TouchableOpacity onPress={() => { this.setState({resizeMode: resizeMode}) }}>\r\n          <Text style={[styles.controlOption, {fontWeight: isSelected ? \"bold\" : \"normal\"}]}>\r\n            {resizeMode}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n  \r\n    renderVolumeControl(volume) {\r\n      const isSelected = (this.state.volume == volume);\r\n  \r\n      return (\r\n        <TouchableOpacity onPress={() => { this.setState({volume: volume}) }}>\r\n          <Text style={[styles.controlOption, {fontWeight: isSelected ? \"bold\" : \"normal\"}]}>\r\n            {volume * 100}%\r\n          </Text>\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n  \r\n    render() {\r\n      const flexCompleted = this.getCurrentTimePercentage() * 100;\r\n      const flexRemaining = (1 - this.getCurrentTimePercentage()) * 100;\r\n  \r\n      return (\r\n        <View style={styles.container}>\r\n          <TouchableOpacity style={styles.fullScreen} onPress={() => {this.setState({paused: !this.state.paused})}}>\r\n            <Video source={require('../../../../test.mp4')}\r\n                   style={styles.fullScreen}\r\n                   rate={this.state.rate}\r\n                   paused={this.state.paused}\r\n                   volume={this.state.volume}\r\n                   muted={this.state.muted}\r\n                   resizeMode={this.state.resizeMode}\r\n                   onLoad={this.onLoad}\r\n                   onProgress={this.onProgress}\r\n                   onEnd={() => { console.log('Done!') }}\r\n                   repeat={true} />\r\n          </TouchableOpacity>\r\n  \r\n          <View style={styles.controls}>\r\n            <View style={styles.generalControls}>\r\n              <View style={styles.rateControl}>\r\n                {this.renderRateControl(0.25)}\r\n                {this.renderRateControl(0.5)}\r\n                {this.renderRateControl(1.0)}\r\n                {this.renderRateControl(1.5)}\r\n                {this.renderRateControl(2.0)}\r\n              </View>\r\n  \r\n              <View style={styles.volumeControl}>\r\n                {this.renderVolumeControl(0.5)}\r\n                {this.renderVolumeControl(1)}\r\n                {this.renderVolumeControl(1.5)}\r\n              </View>\r\n  \r\n              <View style={styles.resizeModeControl}>\r\n                {this.renderResizeModeControl('cover')}\r\n                {this.renderResizeModeControl('contain')}\r\n                {this.renderResizeModeControl('stretch')}\r\n              </View>\r\n            </View>\r\n  \r\n            <View style={styles.trackingControls}>\r\n              <View style={styles.progress}>\r\n                <View style={[styles.innerProgressCompleted, {flex: flexCompleted}]} />\r\n                <View style={[styles.innerProgressRemaining, {flex: flexRemaining}]} />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: 'black',\r\n    },\r\n    fullScreen: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      bottom: 0,\r\n      right: 0,\r\n    },\r\n    controls: {\r\n      backgroundColor: \"transparent\",\r\n      borderRadius: 5,\r\n      position: 'absolute',\r\n      bottom: 20,\r\n      left: 20,\r\n      right: 20,\r\n    },\r\n    progress: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      borderRadius: 3,\r\n      overflow: 'hidden',\r\n    },\r\n    innerProgressCompleted: {\r\n      height: 20,\r\n      backgroundColor: '#cccccc',\r\n    },\r\n    innerProgressRemaining: {\r\n      height: 20,\r\n      backgroundColor: '#2C2C2C',\r\n    },\r\n    generalControls: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      borderRadius: 4,\r\n      overflow: 'hidden',\r\n      paddingBottom: 10,\r\n    },\r\n    rateControl: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n    },\r\n    volumeControl: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n    },\r\n    resizeModeControl: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    controlOption: {\r\n      alignSelf: 'center',\r\n      fontSize: 11,\r\n      color: \"white\",\r\n      paddingLeft: 2,\r\n      paddingRight: 2,\r\n      lineHeight: 12,\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}