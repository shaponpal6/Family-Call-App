{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\", \"customStyles\"],\n    _excluded2 = [\"video\", \"style\", \"resizeMode\", \"pauseOnPress\", \"fullScreenOnLongPress\", \"customStyles\"];\nvar _jsxFileName = \"D:\\\\React\\\\Family-Call-App\\\\node_modules\\\\react-native-video-player\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport Video from 'react-native-video';\nvar BackgroundImage = ImageBackground || Image;\nvar ViewPropTypesVar;\n\nif (ViewPropTypes) {\n  ViewPropTypesVar = ViewPropTypes;\n} else {\n  ViewPropTypesVar = View.propTypes;\n}\n\nvar getDurationTime = function getDurationTime(duration) {\n  var padTimeValueString = function padTimeValueString(value) {\n    return value.toString().padStart(2, '0');\n  };\n\n  if (!Number.isFinite(duration)) return '';\n  var seconds = Math.floor(duration % 60),\n      minutes = Math.floor(duration / 60 % 60),\n      hours = Math.floor(duration / (60 * 60) % 24);\n  var isHrsZero = hours === 0;\n  hours = isHrsZero ? 0 : padTimeValueString(hours);\n  minutes = padTimeValueString(minutes);\n  seconds = padTimeValueString(seconds);\n\n  if (isHrsZero) {\n    return minutes + ':' + seconds;\n  }\n\n  return hours + ':' + minutes + ':' + seconds;\n};\n\nvar styles = StyleSheet.create({\n  preloadingPlaceholder: {\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  thumbnail: {\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  playButton: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  playArrow: {\n    color: 'white'\n  },\n  video: Platform.Version >= 24 ? {} : {\n    backgroundColor: 'black'\n  },\n  controls: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    height: 48,\n    marginTop: -48,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  playControl: {\n    color: 'white',\n    padding: 8\n  },\n  extraControl: {\n    color: 'white',\n    padding: 8\n  },\n  seekBar: {\n    alignItems: 'center',\n    height: 30,\n    flexGrow: 1,\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    marginLeft: -10,\n    marginRight: -5\n  },\n  seekBarFullWidth: {\n    marginLeft: 0,\n    marginRight: 0,\n    paddingHorizontal: 0,\n    marginTop: -3,\n    height: 3\n  },\n  seekBarProgress: {\n    height: 3,\n    backgroundColor: '#F00'\n  },\n  seekBarKnob: {\n    width: 20,\n    height: 20,\n    marginHorizontal: -8,\n    marginVertical: -10,\n    borderRadius: 10,\n    backgroundColor: '#F00',\n    transform: [{\n      scale: 0.8\n    }],\n    zIndex: 1\n  },\n  seekBarBackground: {\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\n    height: 3\n  },\n  overlayButton: {\n    flex: 1\n  },\n  activeDurationText: {\n    paddingLeft: 8,\n    paddingRight: 0,\n    paddingBottom: 0,\n    paddingTop: 0\n  },\n  durationText: {\n    color: 'white'\n  }\n});\n\nvar VideoPlayer = function (_Component) {\n  _inherits(VideoPlayer, _Component);\n\n  var _super = _createSuper(VideoPlayer);\n\n  function VideoPlayer(props) {\n    var _this;\n\n    _classCallCheck(this, VideoPlayer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isStarted: props.autoplay,\n      isPlaying: props.autoplay,\n      hasEnded: false,\n      width: 200,\n      progress: 0,\n      isMuted: props.defaultMuted,\n      isControlsVisible: !props.hideControlsOnStart,\n      duration: 0,\n      isSeeking: false\n    };\n    _this.seekBarWidth = 200;\n    _this.wasPlayingBeforeSeek = props.autoplay;\n    _this.seekTouchStart = 0;\n    _this.seekProgressStart = 0;\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.onStartPress = _this.onStartPress.bind(_assertThisInitialized(_this));\n    _this.onProgress = _this.onProgress.bind(_assertThisInitialized(_this));\n    _this.onEnd = _this.onEnd.bind(_assertThisInitialized(_this));\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_this));\n    _this.onPlayPress = _this.onPlayPress.bind(_assertThisInitialized(_this));\n    _this.onMutePress = _this.onMutePress.bind(_assertThisInitialized(_this));\n    _this.showControls = _this.showControls.bind(_assertThisInitialized(_this));\n    _this.onToggleFullScreen = _this.onToggleFullScreen.bind(_assertThisInitialized(_this));\n    _this.onSeekBarLayout = _this.onSeekBarLayout.bind(_assertThisInitialized(_this));\n    _this.onSeekGrant = _this.onSeekGrant.bind(_assertThisInitialized(_this));\n    _this.onSeekRelease = _this.onSeekRelease.bind(_assertThisInitialized(_this));\n    _this.onSeek = _this.onSeek.bind(_assertThisInitialized(_this));\n    _this.onSeekEvent = _this.onSeekEvent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(VideoPlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoplay) {\n        this.hideControls();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.controlsTimeout) {\n        clearTimeout(this.controlsTimeout);\n        this.controlsTimeout = null;\n      }\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(event) {\n      var width = event.nativeEvent.layout.width;\n      this.setState({\n        width: width\n      });\n    }\n  }, {\n    key: \"onStartPress\",\n    value: function onStartPress() {\n      if (this.props.onStart) {\n        this.props.onStart();\n      }\n\n      this.setState(function (state) {\n        return {\n          isPlaying: true,\n          isStarted: true,\n          hasEnded: false,\n          progress: state.progress === 1 ? 0 : state.progress\n        };\n      });\n      this.hideControls();\n    }\n  }, {\n    key: \"onProgress\",\n    value: function onProgress(event) {\n      var _this$currentTime;\n\n      if (this.state.isSeeking) {\n        return;\n      }\n\n      if (this.props.onProgress) {\n        this.props.onProgress(event);\n      }\n\n      this.setState({\n        progress: event.currentTime / (this.props.duration || this.state.duration)\n      });\n      (_this$currentTime = this.currentTime) == null ? void 0 : _this$currentTime.setNativeProps({\n        text: getDurationTime(event.currentTime)\n      });\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(event) {\n      var _this2 = this,\n          _this$currentTime2;\n\n      if (this.props.onEnd) {\n        this.props.onEnd(event);\n      }\n\n      if (this.props.endWithThumbnail || this.props.endThumbnail) {\n        this.setState({\n          isStarted: false,\n          hasEnded: true\n        });\n        this.player.dismissFullscreenPlayer();\n      }\n\n      this.setState({\n        progress: 1\n      });\n\n      if (!this.props.loop) {\n        this.setState({\n          isPlaying: false\n        }, function () {\n          return _this2.player && _this2.player.seek(0);\n        });\n      } else {\n        this.player.seek(0);\n      }\n\n      (_this$currentTime2 = this.currentTime) == null ? void 0 : _this$currentTime2.setNativeProps({\n        text: getDurationTime(this.state.duration)\n      });\n    }\n  }, {\n    key: \"onLoad\",\n    value: function onLoad(event) {\n      if (this.props.onLoad) {\n        this.props.onLoad(event);\n      }\n\n      var duration = event.duration;\n      this.setState({\n        duration: duration\n      });\n    }\n  }, {\n    key: \"onPlayPress\",\n    value: function onPlayPress() {\n      if (this.props.onPlayPress) {\n        this.props.onPlayPress();\n      }\n\n      this.setState({\n        isPlaying: !this.state.isPlaying\n      });\n      this.showControls();\n    }\n  }, {\n    key: \"onMutePress\",\n    value: function onMutePress() {\n      var isMuted = !this.state.isMuted;\n\n      if (this.props.onMutePress) {\n        this.props.onMutePress(isMuted);\n      }\n\n      this.setState({\n        isMuted: isMuted\n      });\n      this.showControls();\n    }\n  }, {\n    key: \"onToggleFullScreen\",\n    value: function onToggleFullScreen() {\n      this.player.presentFullscreenPlayer();\n    }\n  }, {\n    key: \"onSeekBarLayout\",\n    value: function onSeekBarLayout(_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var customStyle = this.props.customStyles.seekBar;\n      var padding = 0;\n\n      if (customStyle && customStyle.paddingHorizontal) {\n        padding = customStyle.paddingHorizontal * 2;\n      } else if (customStyle) {\n        padding = customStyle.paddingLeft || 0;\n        padding += customStyle.paddingRight ? customStyle.paddingRight : 0;\n      } else {\n        padding = 20;\n      }\n\n      this.seekBarWidth = nativeEvent.layout.width - padding;\n    }\n  }, {\n    key: \"onSeekStartResponder\",\n    value: function onSeekStartResponder() {\n      return true;\n    }\n  }, {\n    key: \"onSeekMoveResponder\",\n    value: function onSeekMoveResponder() {\n      return true;\n    }\n  }, {\n    key: \"onSeekGrant\",\n    value: function onSeekGrant(e) {\n      this.seekTouchStart = e.nativeEvent.pageX;\n      this.seekProgressStart = this.state.progress;\n      this.wasPlayingBeforeSeek = this.state.isPlaying;\n      this.setState({\n        isSeeking: true,\n        isPlaying: false\n      });\n    }\n  }, {\n    key: \"onSeekRelease\",\n    value: function onSeekRelease() {\n      this.setState({\n        isSeeking: false,\n        isPlaying: this.wasPlayingBeforeSeek\n      });\n      this.showControls();\n    }\n  }, {\n    key: \"onSeek\",\n    value: function onSeek(e) {\n      var diff = e.nativeEvent.pageX - this.seekTouchStart;\n      var ratio = 100 / this.seekBarWidth;\n      var progress = this.seekProgressStart + ratio * diff / 100;\n      this.setState({\n        progress: progress\n      });\n      this.player.seek(progress * this.state.duration);\n    }\n  }, {\n    key: \"onSeekEvent\",\n    value: function onSeekEvent(e) {\n      var _this$currentTime3;\n\n      (_this$currentTime3 = this.currentTime) == null ? void 0 : _this$currentTime3.setNativeProps({\n        text: getDurationTime(e.currentTime)\n      });\n    }\n  }, {\n    key: \"getSizeStyles\",\n    value: function getSizeStyles() {\n      var _this$props = this.props,\n          videoWidth = _this$props.videoWidth,\n          videoHeight = _this$props.videoHeight;\n      var width = this.state.width;\n      var ratio = videoHeight / videoWidth;\n      return {\n        height: width * ratio,\n        width: width\n      };\n    }\n  }, {\n    key: \"hideControls\",\n    value: function hideControls() {\n      var _this3 = this;\n\n      if (this.props.onHideControls) {\n        this.props.onHideControls();\n      }\n\n      if (this.props.disableControlsAutoHide) {\n        return;\n      }\n\n      if (this.controlsTimeout) {\n        clearTimeout(this.controlsTimeout);\n        this.controlsTimeout = null;\n      }\n\n      this.controlsTimeout = setTimeout(function () {\n        _this3.setState({\n          isControlsVisible: false\n        });\n      }, this.props.controlsTimeout);\n    }\n  }, {\n    key: \"showControls\",\n    value: function showControls() {\n      if (this.props.onShowControls) {\n        this.props.onShowControls();\n      }\n\n      this.setState({\n        isControlsVisible: true\n      });\n      this.hideControls();\n    }\n  }, {\n    key: \"seek\",\n    value: function seek(t) {\n      this.player.seek(t);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.setState({\n        isPlaying: false,\n        progress: 0\n      });\n      this.seek(0);\n      this.showControls();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.setState({\n        isPlaying: false\n      });\n      this.showControls();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.setState({\n        isPlaying: true\n      });\n      this.showControls();\n    }\n  }, {\n    key: \"renderStartButton\",\n    value: function renderStartButton() {\n      var customStyles = this.props.customStyles;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.playButton, customStyles.playButton],\n        onPress: this.onStartPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon, {\n        style: [styles.playArrow, customStyles.playArrow],\n        name: \"play-arrow\",\n        size: 42,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderThumbnail\",\n    value: function renderThumbnail(thumbnail) {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          customStyles = _this$props2.customStyles,\n          props = _objectWithoutProperties(_this$props2, _excluded);\n\n      return React.createElement(BackgroundImage, _extends({}, props, {\n        style: [styles.thumbnail, this.getSizeStyles(), style, customStyles.thumbnail],\n        source: thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 7\n        }\n      }), this.renderStartButton());\n    }\n  }, {\n    key: \"renderSeekBar\",\n    value: function renderSeekBar(fullWidth) {\n      var _this$props3 = this.props,\n          customStyles = _this$props3.customStyles,\n          disableSeek = _this$props3.disableSeek;\n      return React.createElement(View, {\n        style: [styles.seekBar, fullWidth ? styles.seekBarFullWidth : {}, customStyles.seekBar, fullWidth ? customStyles.seekBarFullWidth : {}],\n        onLayout: this.onSeekBarLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [{\n          flexGrow: this.state.progress\n        }, styles.seekBarProgress, customStyles.seekBarProgress],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 9\n        }\n      }), !fullWidth && !disableSeek ? React.createElement(View, {\n        style: [styles.seekBarKnob, customStyles.seekBarKnob, this.state.isSeeking ? {\n          transform: [{\n            scale: 1\n          }]\n        } : {}, this.state.isSeeking ? customStyles.seekBarKnobSeeking : {}],\n        hitSlop: {\n          top: 20,\n          bottom: 20,\n          left: 10,\n          right: 20\n        },\n        onStartShouldSetResponder: this.onSeekStartResponder,\n        onMoveShouldSetPanResponder: this.onSeekMoveResponder,\n        onResponderGrant: this.onSeekGrant,\n        onResponderMove: this.onSeek,\n        onResponderRelease: this.onSeekRelease,\n        onResponderTerminate: this.onSeekRelease,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }\n      }) : null, React.createElement(View, {\n        style: [styles.seekBarBackground, {\n          flexGrow: 1 - this.state.progress\n        }, customStyles.seekBarBackground],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderControls\",\n    value: function renderControls() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          customStyles = _this$props4.customStyles,\n          showDuration = _this$props4.showDuration;\n      return React.createElement(View, {\n        style: [styles.controls, customStyles.controls],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.onPlayPress,\n        style: [customStyles.controlButton, customStyles.playControl],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        style: [styles.playControl, customStyles.controlIcon, customStyles.playIcon],\n        name: this.state.isPlaying ? 'pause' : 'play-arrow',\n        size: 32,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }\n      })), this.renderSeekBar(), showDuration && React.createElement(React.Fragment, null, React.createElement(TextInput, {\n        style: [styles.durationText, styles.activeDurationText, customStyles.durationText],\n        editable: false,\n        ref: function ref(e) {\n          return _this4.currentTime = e;\n        },\n        value: getDurationTime(0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: [styles.durationText, customStyles.durationText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }\n      }, \"/\"), React.createElement(Text, {\n        style: [styles.durationText, customStyles.durationText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }\n      }, getDurationTime(this.state.duration))), this.props.muted ? null : React.createElement(TouchableOpacity, {\n        onPress: this.onMutePress,\n        style: customStyles.controlButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        style: [styles.extraControl, customStyles.controlIcon],\n        name: this.state.isMuted ? 'volume-off' : 'volume-up',\n        size: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }\n      })), Platform.OS === 'android' || this.props.disableFullscreen ? null : React.createElement(TouchableOpacity, {\n        onPress: this.onToggleFullScreen,\n        style: customStyles.controlButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        style: [styles.extraControl, customStyles.controlIcon],\n        name: \"fullscreen\",\n        size: 32,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }\n      })));\n    }\n  }, {\n    key: \"renderVideo\",\n    value: function renderVideo() {\n      var _this5 = this;\n\n      var _this$props5 = this.props,\n          video = _this$props5.video,\n          style = _this$props5.style,\n          resizeMode = _this$props5.resizeMode,\n          pauseOnPress = _this$props5.pauseOnPress,\n          fullScreenOnLongPress = _this$props5.fullScreenOnLongPress,\n          customStyles = _this$props5.customStyles,\n          props = _objectWithoutProperties(_this$props5, _excluded2);\n\n      return React.createElement(View, {\n        style: customStyles.videoWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 7\n        }\n      }, React.createElement(Video, _extends({}, props, {\n        style: [styles.video, this.getSizeStyles(), style, customStyles.video],\n        ref: function ref(p) {\n          _this5.player = p;\n        },\n        muted: this.props.muted || this.state.isMuted,\n        paused: this.props.paused ? this.props.paused || !this.state.isPlaying : !this.state.isPlaying,\n        onProgress: this.onProgress,\n        onEnd: this.onEnd,\n        onLoad: this.onLoad,\n        source: video,\n        resizeMode: resizeMode,\n        onSeek: this.onSeekEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        style: [this.getSizeStyles(), {\n          marginTop: -this.getSizeStyles().height\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.overlayButton,\n        onPress: function onPress() {\n          _this5.showControls();\n\n          if (pauseOnPress) _this5.onPlayPress();\n        },\n        onLongPress: function onLongPress() {\n          if (fullScreenOnLongPress && Platform.OS !== 'android') _this5.onToggleFullScreen();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }\n      })), !this.state.isPlaying || this.state.isControlsVisible ? this.renderControls() : this.renderSeekBar(true));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props6 = this.props,\n          thumbnail = _this$props6.thumbnail,\n          endThumbnail = _this$props6.endThumbnail,\n          style = _this$props6.style;\n      var _this$state = this.state,\n          isStarted = _this$state.isStarted,\n          hasEnded = _this$state.hasEnded;\n\n      if (hasEnded && endThumbnail) {\n        return this.renderThumbnail(endThumbnail);\n      } else if (!isStarted && thumbnail) {\n        return this.renderThumbnail(thumbnail);\n      } else if (!isStarted) {\n        return React.createElement(View, {\n          style: [styles.preloadingPlaceholder, this.getSizeStyles(), style],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 9\n          }\n        }, this.renderStartButton());\n      }\n\n      return this.renderVideo();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        onLayout: this.onLayout,\n        style: this.props.customStyles.wrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 7\n        }\n      }, this.renderContent());\n    }\n  }]);\n\n  return VideoPlayer;\n}(Component);\n\nexport { VideoPlayer as default };\nVideoPlayer.propTypes = {\n  video: Video.propTypes.source,\n  thumbnail: Image.propTypes.source,\n  endThumbnail: Image.propTypes.source,\n  videoWidth: PropTypes.number,\n  videoHeight: PropTypes.number,\n  duration: PropTypes.number,\n  autoplay: PropTypes.bool,\n  paused: PropTypes.bool,\n  defaultMuted: PropTypes.bool,\n  muted: PropTypes.bool,\n  style: ViewPropTypesVar.style,\n  controlsTimeout: PropTypes.number,\n  disableControlsAutoHide: PropTypes.bool,\n  disableFullscreen: PropTypes.bool,\n  loop: PropTypes.bool,\n  resizeMode: Video.propTypes.resizeMode,\n  hideControlsOnStart: PropTypes.bool,\n  endWithThumbnail: PropTypes.bool,\n  disableSeek: PropTypes.bool,\n  pauseOnPress: PropTypes.bool,\n  fullScreenOnLongPress: PropTypes.bool,\n  customStyles: PropTypes.shape({\n    wrapper: ViewPropTypesVar.style,\n    video: Video.propTypes.style,\n    videoWrapper: ViewPropTypesVar.style,\n    controls: ViewPropTypesVar.style,\n    playControl: ViewPropTypesVar.style,\n    controlButton: ViewPropTypesVar.style,\n    controlIcon: Icon.propTypes.style,\n    playIcon: Icon.propTypes.style,\n    seekBar: ViewPropTypesVar.style,\n    seekBarFullWidth: ViewPropTypesVar.style,\n    seekBarProgress: ViewPropTypesVar.style,\n    seekBarKnob: ViewPropTypesVar.style,\n    seekBarKnobSeeking: ViewPropTypesVar.style,\n    seekBarBackground: ViewPropTypesVar.style,\n    thumbnail: Image.propTypes.style,\n    playButton: ViewPropTypesVar.style,\n    playArrow: Icon.propTypes.style,\n    durationText: ViewPropTypesVar.style\n  }),\n  onEnd: PropTypes.func,\n  onProgress: PropTypes.func,\n  onLoad: PropTypes.func,\n  onStart: PropTypes.func,\n  onPlayPress: PropTypes.func,\n  onHideControls: PropTypes.func,\n  onShowControls: PropTypes.func,\n  onMutePress: PropTypes.func,\n  showDuration: PropTypes.bool\n};\nVideoPlayer.defaultProps = {\n  videoWidth: 1280,\n  videoHeight: 720,\n  autoplay: false,\n  controlsTimeout: 2000,\n  loop: false,\n  resizeMode: 'contain',\n  disableSeek: false,\n  pauseOnPress: false,\n  fullScreenOnLongPress: false,\n  customStyles: {},\n  showDuration: false\n};","map":{"version":3,"sources":["D:/React/Family-Call-App/node_modules/react-native-video-player/index.js"],"names":["React","Component","PropTypes","ViewPropTypes","Icon","Video","BackgroundImage","ImageBackground","Image","ViewPropTypesVar","View","propTypes","getDurationTime","duration","padTimeValueString","value","toString","padStart","Number","isFinite","seconds","Math","floor","minutes","hours","isHrsZero","styles","StyleSheet","create","preloadingPlaceholder","backgroundColor","justifyContent","alignItems","thumbnail","playButton","width","height","borderRadius","playArrow","color","video","Platform","Version","controls","marginTop","flexDirection","playControl","padding","extraControl","seekBar","flexGrow","paddingHorizontal","marginLeft","marginRight","seekBarFullWidth","seekBarProgress","seekBarKnob","marginHorizontal","marginVertical","transform","scale","zIndex","seekBarBackground","overlayButton","flex","activeDurationText","paddingLeft","paddingRight","paddingBottom","paddingTop","durationText","VideoPlayer","props","state","isStarted","autoplay","isPlaying","hasEnded","progress","isMuted","defaultMuted","isControlsVisible","hideControlsOnStart","isSeeking","seekBarWidth","wasPlayingBeforeSeek","seekTouchStart","seekProgressStart","onLayout","bind","onStartPress","onProgress","onEnd","onLoad","onPlayPress","onMutePress","showControls","onToggleFullScreen","onSeekBarLayout","onSeekGrant","onSeekRelease","onSeek","onSeekEvent","hideControls","controlsTimeout","clearTimeout","event","nativeEvent","layout","setState","onStart","currentTime","setNativeProps","text","endWithThumbnail","endThumbnail","player","dismissFullscreenPlayer","loop","seek","presentFullscreenPlayer","customStyle","customStyles","e","pageX","diff","ratio","videoWidth","videoHeight","onHideControls","disableControlsAutoHide","setTimeout","onShowControls","t","style","getSizeStyles","renderStartButton","fullWidth","disableSeek","seekBarKnobSeeking","top","bottom","left","right","onSeekStartResponder","onSeekMoveResponder","showDuration","controlButton","controlIcon","playIcon","renderSeekBar","muted","OS","disableFullscreen","resizeMode","pauseOnPress","fullScreenOnLongPress","videoWrapper","p","paused","renderControls","renderThumbnail","renderVideo","wrapper","renderContent","source","number","bool","shape","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, ImageBackground, Platform, StyleSheet, Text, TextInput, TouchableOpacity, View, ViewPropTypes } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport Video from 'react-native-video'; // eslint-disable-line\n\nconst BackgroundImage = ImageBackground || Image; // fall back to Image if RN < 0.46\n\nlet ViewPropTypesVar;\n\nif (ViewPropTypes) {\n  ViewPropTypesVar = ViewPropTypes;\n} else {\n  ViewPropTypesVar = View.propTypes;\n}\n\nconst getDurationTime = (duration) => {\n  const padTimeValueString = (value) => value.toString().padStart(2, '0');\n\n  if (!Number.isFinite(duration)) return '';\n  let seconds = Math.floor(duration % 60), minutes = Math.floor((duration / 60) % 60), hours = Math.floor((duration / (60 * 60)) % 24);\n\n  const isHrsZero = hours === 0;\n  hours = isHrsZero ? 0 : padTimeValueString(hours);\n  minutes = padTimeValueString(minutes);\n  seconds = padTimeValueString(seconds);\n\n  if (isHrsZero) {\n    return minutes + ':' + seconds;\n  }\n\n  return hours + ':' + minutes + ':' + seconds;\n};\n\nconst styles = StyleSheet.create({\n  preloadingPlaceholder: {\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  thumbnail: {\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  playButton: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  playArrow: {\n    color: 'white',\n  },\n  video: Platform.Version >= 24 ? {} : {\n    backgroundColor: 'black',\n  },\n  controls: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    height: 48,\n    marginTop: -48,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  playControl: {\n    color: 'white',\n    padding: 8,\n  },\n  extraControl: {\n    color: 'white',\n    padding: 8,\n  },\n  seekBar: {\n    alignItems: 'center',\n    height: 30,\n    flexGrow: 1,\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    marginLeft: -10,\n    marginRight: -5,\n  },\n  seekBarFullWidth: {\n    marginLeft: 0,\n    marginRight: 0,\n    paddingHorizontal: 0,\n    marginTop: -3,\n    height: 3,\n  },\n  seekBarProgress: {\n    height: 3,\n    backgroundColor: '#F00',\n  },\n  seekBarKnob: {\n    width: 20,\n    height: 20,\n    marginHorizontal: -8,\n    marginVertical: -10,\n    borderRadius: 10,\n    backgroundColor: '#F00',\n    transform: [{ scale: 0.8 }],\n    zIndex: 1,\n  },\n  seekBarBackground: {\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\n    height: 3,\n  },\n  overlayButton: {\n    flex: 1,\n  },\n  activeDurationText: {\n    paddingLeft: 8,\n    paddingRight:0,\n    paddingBottom: 0,\n    paddingTop: 0\n  },\n  durationText: {\n    color: 'white'\n  }\n});\n\nexport default class VideoPlayer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isStarted: props.autoplay,\n      isPlaying: props.autoplay,\n      hasEnded: false,\n      width: 200,\n      progress: 0,\n      isMuted: props.defaultMuted,\n      isControlsVisible: !props.hideControlsOnStart,\n      duration: 0,\n      isSeeking: false,\n    };\n\n    this.seekBarWidth = 200;\n    this.wasPlayingBeforeSeek = props.autoplay;\n    this.seekTouchStart = 0;\n    this.seekProgressStart = 0;\n\n    this.onLayout = this.onLayout.bind(this);\n    this.onStartPress = this.onStartPress.bind(this);\n    this.onProgress = this.onProgress.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.onPlayPress = this.onPlayPress.bind(this);\n    this.onMutePress = this.onMutePress.bind(this);\n    this.showControls = this.showControls.bind(this);\n    this.onToggleFullScreen = this.onToggleFullScreen.bind(this);\n    this.onSeekBarLayout = this.onSeekBarLayout.bind(this);\n    this.onSeekGrant = this.onSeekGrant.bind(this);\n    this.onSeekRelease = this.onSeekRelease.bind(this);\n    this.onSeek = this.onSeek.bind(this);\n    this.onSeekEvent = this.onSeekEvent.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.autoplay) {\n      this.hideControls();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n      this.controlsTimeout = null;\n    }\n  }\n\n  onLayout(event) {\n    const { width } = event.nativeEvent.layout;\n    this.setState({\n      width,\n    });\n  }\n\n  onStartPress() {\n    if (this.props.onStart) {\n      this.props.onStart();\n    }\n\n    this.setState(state => ({\n      isPlaying: true,\n      isStarted: true,\n      hasEnded: false,\n      progress: state.progress === 1 ? 0 : state.progress,\n    }));\n\n    this.hideControls();\n  }\n\n  onProgress(event) {\n    if (this.state.isSeeking) {\n      return;\n    }\n    if (this.props.onProgress) {\n      this.props.onProgress(event);\n    }\n    this.setState({\n      progress: event.currentTime / (this.props.duration || this.state.duration),\n    });\n    this.currentTime?.setNativeProps({ text: getDurationTime(event.currentTime) })\n  }\n\n  onEnd(event) {\n    if (this.props.onEnd) {\n      this.props.onEnd(event);\n    }\n\n    if (this.props.endWithThumbnail || this.props.endThumbnail) {\n      this.setState({ isStarted: false, hasEnded: true });\n      this.player.dismissFullscreenPlayer();\n    }\n\n    this.setState({ progress: 1 });\n\n    if (!this.props.loop) {\n      this.setState(\n        { isPlaying: false },\n        () => this.player && this.player.seek(0)\n      );\n    } else {\n      this.player.seek(0);\n    }\n\n    this.currentTime?.setNativeProps({ text: getDurationTime(this.state.duration) })\n  }\n\n  onLoad(event) {\n    if (this.props.onLoad) {\n      this.props.onLoad(event);\n    }\n\n    const { duration } = event;\n    this.setState({ duration });\n  }\n\n  onPlayPress() {\n    if (this.props.onPlayPress) {\n      this.props.onPlayPress();\n    }\n\n    this.setState({\n      isPlaying: !this.state.isPlaying,\n    });\n    this.showControls();\n  }\n\n  onMutePress() {\n    const isMuted = !this.state.isMuted;\n    if (this.props.onMutePress) {\n      this.props.onMutePress(isMuted);\n    }\n    this.setState({\n      isMuted,\n    });\n    this.showControls();\n\n  }\n\n  onToggleFullScreen() {\n    this.player.presentFullscreenPlayer();\n  }\n\n  onSeekBarLayout({ nativeEvent }) {\n    const customStyle = this.props.customStyles.seekBar;\n    let padding = 0;\n    if (customStyle && customStyle.paddingHorizontal) {\n      padding = customStyle.paddingHorizontal * 2;\n    } else if (customStyle) {\n      padding = customStyle.paddingLeft || 0;\n      padding += customStyle.paddingRight ? customStyle.paddingRight : 0;\n    } else {\n      padding = 20;\n    }\n\n    this.seekBarWidth = nativeEvent.layout.width - padding;\n  }\n\n  onSeekStartResponder() {\n    return true;\n  }\n\n  onSeekMoveResponder() {\n    return true;\n  }\n\n  onSeekGrant(e) {\n    this.seekTouchStart = e.nativeEvent.pageX;\n    this.seekProgressStart = this.state.progress;\n    this.wasPlayingBeforeSeek = this.state.isPlaying;\n    this.setState({\n      isSeeking: true,\n      isPlaying: false,\n    });\n  }\n\n  onSeekRelease() {\n    this.setState({\n      isSeeking: false,\n      isPlaying: this.wasPlayingBeforeSeek,\n    });\n    this.showControls();\n  }\n\n  onSeek(e) {\n    const diff = e.nativeEvent.pageX - this.seekTouchStart;\n    const ratio = 100 / this.seekBarWidth;\n    const progress = this.seekProgressStart + ((ratio * diff) / 100);\n\n    this.setState({\n      progress,\n    });\n\n    this.player.seek(progress * this.state.duration);\n  }\n\n  onSeekEvent(e) {\n    this.currentTime?.setNativeProps({ text: getDurationTime(e.currentTime) })\n  }\n\n  getSizeStyles() {\n    const { videoWidth, videoHeight } = this.props;\n    const { width } = this.state;\n    const ratio = videoHeight / videoWidth;\n    return {\n      height: width * ratio,\n      width,\n    };\n  }\n\n  hideControls() {\n    if (this.props.onHideControls) {\n      this.props.onHideControls();\n    }\n\n    if (this.props.disableControlsAutoHide) {\n      return;\n    }\n\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n      this.controlsTimeout = null;\n    }\n    this.controlsTimeout = setTimeout(() => {\n      this.setState({ isControlsVisible: false });\n    }, this.props.controlsTimeout);\n  }\n\n  showControls() {\n    if (this.props.onShowControls) {\n      this.props.onShowControls();\n    }\n\n    this.setState({\n      isControlsVisible: true,\n    });\n    this.hideControls();\n  }\n\n  seek(t) {\n    this.player.seek(t);\n  }\n\n  stop() {\n    this.setState({\n      isPlaying: false,\n      progress: 0,\n    });\n    this.seek(0);\n    this.showControls();\n  }\n\n  pause() {\n    this.setState({\n      isPlaying: false,\n    });\n    this.showControls();\n  }\n\n  resume() {\n    this.setState({\n      isPlaying: true,\n    });\n    this.showControls();\n  }\n\n  renderStartButton() {\n    const { customStyles } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.playButton, customStyles.playButton]}\n        onPress={this.onStartPress}\n      >\n        <Icon style={[styles.playArrow, customStyles.playArrow]} name=\"play-arrow\" size={42} />\n      </TouchableOpacity>\n    );\n  }\n\n  renderThumbnail(thumbnail) {\n    const { style, customStyles, ...props } = this.props;\n    return (\n      <BackgroundImage\n        {...props}\n        style={[\n          styles.thumbnail,\n          this.getSizeStyles(),\n          style,\n          customStyles.thumbnail,\n        ]}\n        source={thumbnail}\n      >\n        {this.renderStartButton()}\n      </BackgroundImage>\n    );\n  }\n\n  renderSeekBar(fullWidth) {\n    const { customStyles, disableSeek } = this.props;\n    return (\n      <View\n        style={[\n          styles.seekBar,\n          fullWidth ? styles.seekBarFullWidth : {},\n          customStyles.seekBar,\n          fullWidth ? customStyles.seekBarFullWidth : {},\n        ]}\n        onLayout={this.onSeekBarLayout}\n      >\n        <View\n          style={[\n            { flexGrow: this.state.progress },\n            styles.seekBarProgress,\n            customStyles.seekBarProgress,\n          ]}\n        />\n        { !fullWidth && !disableSeek ? (\n          <View\n            style={[\n              styles.seekBarKnob,\n              customStyles.seekBarKnob,\n              this.state.isSeeking ? { transform: [{ scale: 1 }] } : {},\n              this.state.isSeeking ? customStyles.seekBarKnobSeeking : {},\n            ]}\n            hitSlop={{ top: 20, bottom: 20, left: 10, right: 20 }}\n            onStartShouldSetResponder={this.onSeekStartResponder}\n            onMoveShouldSetPanResponder={this.onSeekMoveResponder}\n            onResponderGrant={this.onSeekGrant}\n            onResponderMove={this.onSeek}\n            onResponderRelease={this.onSeekRelease}\n            onResponderTerminate={this.onSeekRelease}\n          />\n        ) : null }\n        <View style={[\n          styles.seekBarBackground,\n          { flexGrow: 1 - this.state.progress },\n          customStyles.seekBarBackground,\n        ]} />\n      </View>\n    );\n  }\n\n  renderControls() {\n    const { customStyles, showDuration } = this.props;\n    return (\n      <View style={[styles.controls, customStyles.controls]}>\n        <TouchableOpacity\n          onPress={this.onPlayPress}\n          style={[customStyles.controlButton, customStyles.playControl]}\n        >\n          <Icon\n            style={[styles.playControl, customStyles.controlIcon, customStyles.playIcon]}\n            name={this.state.isPlaying ? 'pause' : 'play-arrow'}\n            size={32}\n          />\n        </TouchableOpacity>\n        {this.renderSeekBar()}\n        {showDuration && (\n          <>\n            <TextInput style={[styles.durationText, styles.activeDurationText, customStyles.durationText]} editable={false} ref={e=> this.currentTime=e} value={getDurationTime(0)}/>\n            <Text style={[styles.durationText, customStyles.durationText]}>/</Text>\n            <Text style={[styles.durationText, customStyles.durationText]}>{getDurationTime(this.state.duration)}</Text>\n          </>\n        )}\n        {this.props.muted ? null : (\n          <TouchableOpacity onPress={this.onMutePress} style={customStyles.controlButton}>\n            <Icon\n              style={[styles.extraControl, customStyles.controlIcon]}\n              name={this.state.isMuted ? 'volume-off' : 'volume-up'}\n              size={24}\n            />\n          </TouchableOpacity>\n        )}\n        {(Platform.OS === 'android' || this.props.disableFullscreen) ? null : (\n          <TouchableOpacity onPress={this.onToggleFullScreen} style={customStyles.controlButton}>\n            <Icon\n              style={[styles.extraControl, customStyles.controlIcon]}\n              name=\"fullscreen\"\n              size={32}\n            />\n          </TouchableOpacity>\n        )}\n      </View>\n    );\n  }\n\n  renderVideo() {\n    const {\n      video,\n      style,\n      resizeMode,\n      pauseOnPress,\n      fullScreenOnLongPress,\n      customStyles,\n      ...props\n    } = this.props;\n    return (\n      <View style={customStyles.videoWrapper}>\n        <Video\n          {...props}\n          style={[\n            styles.video,\n            this.getSizeStyles(),\n            style,\n            customStyles.video,\n          ]}\n          ref={p => { this.player = p; }}\n          muted={this.props.muted || this.state.isMuted}\n          paused={this.props.paused\n            ? this.props.paused || !this.state.isPlaying\n            : !this.state.isPlaying}\n          onProgress={this.onProgress}\n          onEnd={this.onEnd}\n          onLoad={this.onLoad}\n          source={video}\n          resizeMode={resizeMode}\n          onSeek={this.onSeekEvent}\n        />\n        <View\n          style={[\n            this.getSizeStyles(),\n            { marginTop: -this.getSizeStyles().height },\n          ]}\n        >\n          <TouchableOpacity\n            style={styles.overlayButton}\n            onPress={() => {\n              this.showControls();\n              if (pauseOnPress)\n                this.onPlayPress();\n            }}\n            onLongPress={() => {\n              if (fullScreenOnLongPress && Platform.OS !== 'android')\n                this.onToggleFullScreen();\n            }}\n          />\n        </View>\n        {((!this.state.isPlaying) || this.state.isControlsVisible)\n          ? this.renderControls() : this.renderSeekBar(true)}\n      </View>\n    );\n  }\n\n  renderContent() {\n    const { thumbnail, endThumbnail, style } = this.props;\n    const { isStarted, hasEnded } = this.state;\n\n    if (hasEnded && endThumbnail) {\n      return this.renderThumbnail(endThumbnail);\n    }\n    else if (!isStarted && thumbnail) {\n      return this.renderThumbnail(thumbnail);\n    } else if (!isStarted) {\n      return (\n        <View style={[styles.preloadingPlaceholder, this.getSizeStyles(), style]}>\n          {this.renderStartButton()}\n        </View>\n      );\n    }\n    return this.renderVideo();\n  }\n\n  render() {\n    return (\n      <View onLayout={this.onLayout} style={this.props.customStyles.wrapper}>\n        {this.renderContent()}\n      </View>\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  video: Video.propTypes.source,\n  thumbnail: Image.propTypes.source,\n  endThumbnail: Image.propTypes.source,\n  videoWidth: PropTypes.number,\n  videoHeight: PropTypes.number,\n  duration: PropTypes.number,\n  autoplay: PropTypes.bool,\n  paused: PropTypes.bool,\n  defaultMuted: PropTypes.bool,\n  muted: PropTypes.bool,\n  style: ViewPropTypesVar.style,\n  controlsTimeout: PropTypes.number,\n  disableControlsAutoHide: PropTypes.bool,\n  disableFullscreen: PropTypes.bool,\n  loop: PropTypes.bool,\n  resizeMode: Video.propTypes.resizeMode,\n  hideControlsOnStart: PropTypes.bool,\n  endWithThumbnail: PropTypes.bool,\n  disableSeek: PropTypes.bool,\n  pauseOnPress: PropTypes.bool,\n  fullScreenOnLongPress: PropTypes.bool,\n  customStyles: PropTypes.shape({\n    wrapper: ViewPropTypesVar.style,\n    video: Video.propTypes.style,\n    videoWrapper: ViewPropTypesVar.style,\n    controls: ViewPropTypesVar.style,\n    playControl: ViewPropTypesVar.style,\n    controlButton: ViewPropTypesVar.style,\n    controlIcon: Icon.propTypes.style,\n    playIcon: Icon.propTypes.style,\n    seekBar: ViewPropTypesVar.style,\n    seekBarFullWidth: ViewPropTypesVar.style,\n    seekBarProgress: ViewPropTypesVar.style,\n    seekBarKnob: ViewPropTypesVar.style,\n    seekBarKnobSeeking: ViewPropTypesVar.style,\n    seekBarBackground: ViewPropTypesVar.style,\n    thumbnail: Image.propTypes.style,\n    playButton: ViewPropTypesVar.style,\n    playArrow: Icon.propTypes.style,\n    durationText: ViewPropTypesVar.style\n  }),\n  onEnd: PropTypes.func,\n  onProgress: PropTypes.func,\n  onLoad: PropTypes.func,\n  onStart: PropTypes.func,\n  onPlayPress: PropTypes.func,\n  onHideControls: PropTypes.func,\n  onShowControls: PropTypes.func,\n  onMutePress: PropTypes.func,\n  showDuration: PropTypes.bool\n};\n\nVideoPlayer.defaultProps = {\n  videoWidth: 1280,\n  videoHeight: 720,\n  autoplay: false,\n  controlsTimeout: 2000,\n  loop: false,\n  resizeMode: 'contain',\n  disableSeek: false,\n  pauseOnPress: false,\n  fullScreenOnLongPress: false,\n  customStyles: {},\n  showDuration: false\n};\n"]},"metadata":{},"sourceType":"module"}