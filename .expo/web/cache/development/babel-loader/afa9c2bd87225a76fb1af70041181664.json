{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Family-Call-App\\\\App.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Provider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { theme } from \"./src/core/theme\";\nimport { StartScreen, LoginScreen, RegisterScreen, ResetPasswordScreen, Dashboard, MessengerScreen } from \"./src/screens\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \" HHHHHHH ....\"));\n}\n\nexport default function App() {\n  var Tab = createBottomTabNavigator();\n  return React.createElement(Provider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"blue\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Navigator, {\n    initialRouteName: \"Dashboard\",\n    screenOptions: {\n      headerShown: false,\n      headerMode: 'screen',\n      headerTintColor: 'white',\n      headerStyle: {\n        backgroundColor: 'tomato'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"MessengerScreen\",\n    component: MessengerScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"StartScreen\",\n    component: StartScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ResetPasswordScreen\",\n    component: ResetPasswordScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/React/Family-Call-App/App.js"],"names":["React","Provider","NavigationContainer","createStackNavigator","createBottomTabNavigator","theme","StartScreen","LoginScreen","RegisterScreen","ResetPasswordScreen","Dashboard","MessengerScreen","Stack","Tab","MyTabBar","state","descriptors","navigation","flexDirection","App","headerShown","headerMode","headerTintColor","headerStyle","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,KAAT;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,mBAJF,EAKEC,SALF,EAMEC,eANF;AASA,IAAMC,KAAK,GAAGT,oBAAoB,EAAlC;AACA,IAAMU,GAAG,GAAGT,wBAAwB,EAApC;;AAEA,SAASU,QAAT,OAAsD;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACpD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;;AACD,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMN,GAAG,GAAGT,wBAAwB,EAApC;AACA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAC,MADlB;AAEE,IAAA,QAAQ,EAAC,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,WADnB;AAEE,IAAA,aAAa,EAAE;AACbe,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,UAAU,EAAE,QAFC;AAGbC,MAAAA,eAAe,EAAE,OAHJ;AAIbC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AAJA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,iBAAnB;AAAqC,IAAA,SAAS,EAAEb,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEL,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,SAAS,EAAEC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEE,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,qBADP;AAEE,IAAA,SAAS,EAAED,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CALF,CADF,CADF;AA8BD","sourcesContent":["import React from 'react'\r\nimport { View, Text, TouchableOpacity, StatusBar } from 'react-native';\r\nimport { Provider } from 'react-native-paper'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { theme } from './src/core/theme'\r\nimport {\r\n  StartScreen,\r\n  LoginScreen,\r\n  RegisterScreen,\r\n  ResetPasswordScreen,\r\n  Dashboard,\r\n  MessengerScreen,\r\n} from './src/screens'\r\n\r\nconst Stack = createStackNavigator()\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MyTabBar({ state, descriptors, navigation }) {\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      <Text> HHHHHHH ....</Text>\r\n    </View>\r\n  );\r\n}\r\nexport default function App() {\r\n  const Tab = createBottomTabNavigator();\r\n  return (\r\n    <Provider theme={theme}>\r\n      <NavigationContainer>\r\n        <StatusBar\r\n          backgroundColor=\"blue\"\r\n          barStyle=\"light-content\"\r\n        />\r\n        <Stack.Navigator\r\n          initialRouteName=\"Dashboard\"\r\n          screenOptions={{\r\n            headerShown: false,\r\n            headerMode: 'screen',\r\n            headerTintColor: 'white',\r\n            headerStyle: { backgroundColor: 'tomato' },\r\n          }}\r\n        >\r\n          <Stack.Screen name=\"MessengerScreen\" component={MessengerScreen} />\r\n          <Stack.Screen name=\"StartScreen\" component={StartScreen} />\r\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\r\n          <Stack.Screen name=\"RegisterScreen\" component={RegisterScreen} />\r\n          <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n          <Stack.Screen\r\n            name=\"ResetPasswordScreen\"\r\n            component={ResetPasswordScreen}\r\n          />\r\n         \r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </Provider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}